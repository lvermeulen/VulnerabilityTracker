using System.Threading.Tasks;
using Vulnerabilities.Core;
using Xunit;

namespace Vulnerabilities.Sources.SnykIo.Tests
{
    public class OssIndexVulnerabilitySourceShould
    {
        private readonly SnykIoVulnerabilitySource _source;

        public OssIndexVulnerabilitySourceShould()
        {
            _source = new SnykIoVulnerabilitySource("https://snyk.io", "6753ac19-0a98-44af-bd85-f8665c65a080");
        }

        [Theory]
        [InlineData(DependencyManagerTypes.NuGet)]
        [InlineData(DependencyManagerTypes.Npm)]
        public void GetDependencyManagerTypes(DependencyManagerTypes dependencyManager)
        {
            var types = _source.GetDependencyManagerTypes();
            Assert.Contains(dependencyManager, types);
        }

        [Fact]
        public async Task ReturnEmptyCollectionForUnknownDependencyManagerAsync()
        {
            var results = await _source.GetVulnerabilitiesAsync(DependencyManagerTypes.Pip, "Newtonsoft.Json", "11.0.1");
            Assert.Empty(results);
        }

        [Theory]
        [InlineData(DependencyManagerTypes.NuGet, "jquery", "2.0.0")]
        public async Task GetVulnerabilitiesAsync(DependencyManagerTypes dependencyManager, string dependencyName, string dependencyVersion)
        {
            var results = await _source.GetVulnerabilitiesAsync(dependencyManager, dependencyName, dependencyVersion);
            Assert.NotEmpty(results);
        }
    }
}
